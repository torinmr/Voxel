I think that the weird line effect around each cube is a result of using one texture map for all the cube textures - you're seeing the very edge of the adjacent texture. I think I need to use a texture map where there's a "bleed" zone around each cube's texture, or maybe programatically generate one.

Edit: I fixed this. (though I did it by manually fixing the textures, there should be a way to do this automatically.) But now there's still a white glare on distant flat bits of terrain. I'm not sure why this is happening. It may be that I didn't make enough bleed room for each texture, or something like that.

Update on the white glare - It's caused by using a texture map instead of individual textures. I'm using mipmapping to avoid weird issues with far away textures, which means that the texture is pre-downsampled to each power of two, from the original size down to a 1x1 texture. The issue is that this is being applied to the whole texture map, meaning that if I zoom out far enough, the downsampled image is a 1x1 pixel that represents the average color of all of the textures, when I obviously just want the average color of the relevant tile. This explains why adding more bleed room didn't get rid of the issue. I've been able to mask the problem temporarily by filling all the empty spaces of the texture map with a color that's similar to that of grass, but this obviously will fail if I have large expanses of a different block, so I need a better solution. I wonder if there's a way to stop the mipmapping from downsampling after a certain point - if I have a 4x4 texture map, could I make it not generate any samples smaller than 4x4 pixels? Then each pixel would correspond perfectly to one tile, and the problem would be solved completely. This might also solve the line effect without needing to have a bleed zone for each texture.
